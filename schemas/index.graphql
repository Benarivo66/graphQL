 type Mutation {
     User(id: ID): User
 }

 type Query {
     User(id: ID): User
 }

 type User {
     id: ID,
     email: String,
     password: String,
     name: String,
     age: Int,
     numOfVotes: Int,
     contestantNumber: Int,
     isContestant: Boolean,
     isAdmin: Boolean,
     deleted: Boolean,
     token: String,
     description: String,

     create(email: String, password: String, name: String, age: Int): User
     login(email: String, password: String): User
     getAll: [User]
     getOne(_id: ID): User
     deleteOne(_id: ID): User
     update(_id: ID, email: String, name: String, age: Int, isContestant: Boolean, isAdmin: Boolean, description: String): User
     getContestants: [User]
     getTopRankings: [User]
     logout: logoutGraphQLType
 }

 type logoutGraphQLType {
     message: String
 }

 

